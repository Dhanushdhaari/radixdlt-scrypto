[package]
name = "radix-engine"
version = "0.5.0"
edition = "2021"

[dependencies]
sbor = { path = "../sbor", default-features = false }
scrypto = { path = "../scrypto", default-features = false }
colored = { version = "2.0.0", default-features = false }
lru = { version = "0.7.5" }
bencher = { version = "0.1.5" }
hex = { version = "0.4.3", default-features = false }
indexmap = { version = "1.8.1" }

# Wasm validatin 
# 
# Notes:
# - All the libaries are based on `parity-wasm 0.42.0`;
# - `wasm-instrument` plans to switch to `wasmparser` (from BytecodeAlliance);
# - `wasm-instrument` only supports fixed instruction cost, which is the main limitation
wasmi-validation =  { version = "0.4.1" }
wasm-instrument = { git = "https://github.com/paritytech/wasm-instrument", rev = "4713aa760f072f30311c4439d3b27b8544ae44fc" }

# Wasm execution
#
# Wasmi is a WASM interpreter that supports WebAssembly MVP;
# Wasmer supports multiple JIT backends: `singlepass` (linear time), `LLVM` and `cranelift`
wasmi = { version = "0.11.0" }
wasmer = { version = "2.2.1" }
wasmer-compiler-singlepass = { version = "2.2.1" }

[dev-dependencies]
wabt = { version = "0.10.0" }

[[bench]]
name = "bench"
harness = false

[features]
# You should enable either `std` or `alloc`
default = ["std"]
std = ["sbor/std", "scrypto/std", "wasmi/std"]
alloc = ["sbor/alloc", "scrypto/alloc"]

# Use `wasmer` as WASM engine, otherwise `wasmi`
wasmer = []
